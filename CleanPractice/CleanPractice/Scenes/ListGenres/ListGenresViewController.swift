//
//  ListGenresViewController.swift
//  CleanPractice
//
//  Created by Ehsan on 12/04/2020.
//  Copyright (c) 2020 Ali C. All rights reserved.
//
//  This file was generated by Ali Chegini.
//  This is a simplified version of the Clean Swift Xcode Templates so
//  one can apply clean architecture to iOS and Mac projects.
//  For more info visit: http://clean-swift.com
//

import UIKit

protocol ListGenresDisplayable: class {
//    func displaySomething(viewModel: ListGenresModels.ViewModel)
    // func to display error can be added here
}

class ListGenresViewController: UITableViewController, ListGenresDisplayable {
    lazy var interactor = ListGenresInteractor(presenter: ListGenresPresenter(viewController: self))
    lazy var router = ListGenresRouter(viewController: self)
    var viewModel: ListGenresModels.ViewModel?
    
    let uiElements = ListGenresUIs()
    
    let parser = JSONParser()
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        uiElements.setupViews(in: view)
        tableView.register(UITableViewCell.self, forCellReuseIdentifier: "myCell")
        navigationItem.title = "Genres"
        
        parser.parseGenres { (result) in
            print(result)
        }
        
        
        
        //doSomething()
    }
    
    // MARK: Do something
    
//    func doSomething() {
//        let request = ListGenres.Something.Request()
//        interactor?.doSomething(request: request)
//    }
//
//    func displaySomething(viewModel: ListGenresModels.ViewModel) {
//        //nameTextField.text = viewModel.name
//    }
}


extension ListGenresViewController {
    
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 10
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "myCell")!
        cell.textLabel?.text = "Jimbo"
        
        return cell
    }
    
    
}

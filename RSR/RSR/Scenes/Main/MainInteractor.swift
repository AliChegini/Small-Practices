//
//  MainInteractor.swift
//  RSR
//
//  Created by Ehsan on 05/03/2020.
//  Copyright (c) 2020 Ali C. All rights reserved.
//
//  This file was generated by Ali Chegini.
//  This is a simplified version of the Clean Swift Xcode Templates so
//  one can apply clean architecture to iOS and Mac projects.
//  For more info visit: http://clean-swift.com
//

import UIKit

protocol MainBusinessLogic {
    func checkUserConsentFor(request: MainModels.AskForUserConsent.Request)
    func checkDeviceTypeFor(request: MainModels.ShowElementsForDevice.Request)
    func openPrivacyLinkFor(request: MainModels.OpenPrivacyLink.Request)
}

protocol MainDataStore {
  //var name: String { get set }
}

class MainInteractor: MainBusinessLogic, MainDataStore {
    var presenter: MainPresentable?
    
    // reference to defaults to save user consent on privacy policy
    let defaults = UserDefaults.standard
  
    init(presenter: MainPresentable) {
        self.presenter = presenter
    }
    
    func checkUserConsentFor(request: MainModels.AskForUserConsent.Request) {
        // check user defaults for privacy consent
        if !defaults.bool(forKey: "PrivacyConsent") {
            let response = MainModels.AskForUserConsent.Response()
            presenter?.presentPrivacyAlert(response: response)
        }
    }
    
    func checkDeviceTypeFor(request: MainModels.ShowElementsForDevice.Request) {
        if UIDevice.current.userInterfaceIdiom == .phone {
            let response = MainModels.ShowElementsForDevice.Response(deviceType: .phone)
            presenter?.presentElementsForDeviceType(response: response)
        } else if UIDevice.current.userInterfaceIdiom == .pad {
            let response = MainModels.ShowElementsForDevice.Response(deviceType: .pad)
            presenter?.presentElementsForDeviceType(response: response)
        }
    }
    
    func openPrivacyLinkFor(request: MainModels.OpenPrivacyLink.Request) {
        // open link in browser
        if let url = URL(string: "https://www.rsr.nl/index.php?page=privacy-wetgeving") {
            UIApplication.shared.open(url, options: [:], completionHandler: nil)
        }
    }
    
  // MARK: Boiler plate code
  
//    func doSomething(request: MainModels.Request) {
//        worker = MainWorker()
//        worker?.doSomeWork()
//
//        let response = MainModels.Response()
//        presenter?.presentSomething(response: response)
//    }
}
